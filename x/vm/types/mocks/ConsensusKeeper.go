package mocks

import (
	"context"

	"github.com/stretchr/testify/mock"

	consensustypes "github.com/cosmos/cosmos-sdk/x/consensus/types"
)

// ConsensusKeeper is an autogenerated mock type for the ConsensusKeeper type
type ConsensusKeeper struct {
	mock.Mock
}

func (c *ConsensusKeeper) Params(_ context.Context, _ *consensustypes.QueryParamsRequest) (*consensustypes.QueryParamsResponse, error) {
	// TODO implement me
	panic("implement me")
}

// NewConsensusKeeper creates a new instance of ConsensusKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConsensusKeeper(t interface {
	mock.TestingT
	Cleanup(func())
},
) *ConsensusKeeper {
	mock := &ConsensusKeeper{}
	mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
